#!/bin/bash
#
# Build a single node from a given JSON object describing
# build options.
#
# Usage:
#   ./tools/build-a-node BUILD-OPTS BUILD-DIR BUILD-STAMP
#
# Example:
#   ./tools/build-a-node '{"version": "v0.6.18"}' `pwd`/build/nodes/0 master-gcafe0123-20120203T120000Z
#
# TODO: document supported build options
# - version:
# - configure_flags:
# - build_env:
# - npm_version: Optional. A commitish for a special version of npm to pull in
#   and replace the one include with the given node version.
# - build_tag:


export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
set -o xtrace
set -o errexit
set -o pipefail

TOP=$(cd $(dirname $0)/../ >/dev/null; pwd)
buildOpts=$1
buildDir=$2
buildStamp=$3

echo ""
echo "# Build a node in $buildDir with this config:"
echo "$buildOpts" | json

if [[ -d $buildDir ]]; then
    rm -rf $buildDir
fi
mkdir -p $buildDir

cp -PR $TOP/build/src $buildDir/src
cd $buildDir/src
version=$(echo "$buildOpts" | json version)
git checkout $version

npmVersion=$(echo "$buildOpts" | json npm_version)
if [[ -n "$npmVersion" ]]; then
    rm -rf deps/npm
    git clone git://github.com/isaacs/npm.git deps/npm
    (cd deps/npm && git checkout $npmVersion)
fi

configureFlags=$(echo "$buildOpts" | json configure_flags)
if [[ -z "$configureFlags" ]]; then
    configureFlags="--with-dtrace"
fi
buildEnv=$(echo "$buildOpts" | json build_env)
eval "export $buildEnv"
./configure $configureFlags --prefix=$buildDir/node
make
make install

# package
buildTag=$(echo "$buildOpts" | json build_tag)
if [[ -n "$buildTag" ]]; then
    buildTag=-$buildTag
fi
gccVersion=$(gcc --version | head -1 | awk '{print $NF}')
cd $buildDir
tar czf sdcnode-$version-gcc$gccVersion$buildTag-$buildStamp.tgz node
